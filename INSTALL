Install procedure:

Linux:
Make sure you have gcc installed and that it can create 32 bits binaries
(sudo apt-get install gcc-multilib on Ubuntu/Debian)

MacOS:
Install XCode + Command line tools

$ make update # This download and patches the externals needed by the project

__Android__

# Set some environment variable to point to our installed SDKs
$ export ANDROID_SDK_ROOT=/opt/android/android-sdk # Adjust for your environment
$ export ANDROID_NDK_ROOT=/opt/android/android-ndk # Adjust for your environment

$ make android

At this point you should have a working ECL executable in
./local-install/android/bin/ecl. You can "adb push" it to the android
emulator and just execute it.

__iPhone__

$ make ios

The compiled libraries should be in ./local-install/iPhoneUniversal

__Android projects__

To run ecl using JNI from an android app see the HelloEcl project (android/HelloEcl)
You might need to adapt the project to your environment first: 
$ android update project -t android-10 -p .

To compile it:
$ ndk-build
$ ant debug install


__Native client__

You need at least Chrome 31 + NACL sdk version 31
Make sure you have NACL enable in "about:flags"

export NACL_SDK_ROOT=/opt/nacl/pepper_31 # Adjust for your environment
mkdir naclports; cd naclports
gclient config http://naclports.googlecode.com/svn/trunk/src
gclient sync -r 973
export NACL_PORTS_ROOT=path_to_naclport_trunk

In order to compile the example app, you need to compile some packages from naclports:
cd $NACL_PORTS_ROOT/src
./make_all.sh tar glibc-compat

