Index: src/configure
===================================================================
RCS file: /cvsroot/ecls/ecl/src/configure,v
retrieving revision 1.287
diff -r1.287 configure
4344,4345c4344,4345
<   ECL_MIN_TO_RUN=`${ECL_TO_RUN} -eval '(progn (print (truename "sys:ecl_min")) (si:quit))' \
< 	| grep '\#\P' | sed 's,#P"\(.*\)",\1,'`
---
>   ECL_MIN_TO_RUN=`${ECL_TO_RUN} -norc -eval '(progn (print (truename "sys:ecl_min")) (si:quit))' \
> 	| grep -v '^;;;' | grep '\#\P' | sed 's,#P"\(.*\)",\1,'`
4351,4352c4351,4352
<   DPP_TO_RUN=`${ECL_TO_RUN} -eval '(progn (print (truename "sys:dpp")) (si:quit))' \
< 	| grep '\#\P' | sed 's,#P"\(.*\)",\1,'`
---
>   DPP_TO_RUN=`${ECL_TO_RUN} -norc -eval '(progn (print (truename "sys:dpp")) (si:quit))' \
> 	| grep -v '^;;;' | grep '\#\P' | sed 's,#P"\(.*\)",\1,'`
5825,5831c5825
<   { { $as_echo "$as_me:$LINENO: error: in \`$ac_pwd':" >&5
< $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
< { { $as_echo "$as_me:$LINENO: error: cannot run test program while cross compiling
< See \`config.log' for more details." >&5
< $as_echo "$as_me: error: cannot run test program while cross compiling
< See \`config.log' for more details." >&2;}
<    { (exit 1); exit 1; }; }; }
---
>     working_sem_init=yes
8092,8098c8086
<   { { $as_echo "$as_me:$LINENO: error: in \`$ac_pwd':" >&5
< $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
< { { $as_echo "$as_me:$LINENO: error: cannot run test program while cross compiling
< See \`config.log' for more details." >&5
< $as_echo "$as_me: error: cannot run test program while cross compiling
< See \`config.log' for more details." >&2;}
<    { (exit 1); exit 1; }; }; }
---
>       : # do nothing?
8597,8603c8585
<   { { $as_echo "$as_me:$LINENO: error: in \`$ac_pwd':" >&5
< $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
< { { $as_echo "$as_me:$LINENO: error: cannot run test program while cross compiling
< See \`config.log' for more details." >&5
< $as_echo "$as_me: error: cannot run test program while cross compiling
< See \`config.log' for more details." >&2;}
<    { (exit 1); exit 1; }; }; }
---
>     : # do nothing
9374,9380c9356
<   { { $as_echo "$as_me:$LINENO: error: in \`$ac_pwd':" >&5
< $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
< { { $as_echo "$as_me:$LINENO: error: cannot run test program while cross compiling
< See \`config.log' for more details." >&5
< $as_echo "$as_me: error: cannot run test program while cross compiling
< See \`config.log' for more details." >&2;}
<    { (exit 1); exit 1; }; }; }
---
>     : # do nothing
9964a9941
> fi
9976d9952
< fi
10321,10327c10297
<   { { $as_echo "$as_me:$LINENO: error: in \`$ac_pwd':" >&5
< $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
< { { $as_echo "$as_me:$LINENO: error: cannot run test program while cross compiling
< See \`config.log' for more details." >&5
< $as_echo "$as_me: error: cannot run test program while cross compiling
< See \`config.log' for more details." >&2;}
<    { (exit 1); exit 1; }; }; }
---
>     : # do nothing
13630,13636c13600
<   { { $as_echo "$as_me:$LINENO: error: in \`$ac_pwd':" >&5
< $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
< { { $as_echo "$as_me:$LINENO: error: cannot run test program while cross compiling
< See \`config.log' for more details." >&5
< $as_echo "$as_me: error: cannot run test program while cross compiling
< See \`config.log' for more details." >&2;}
<    { (exit 1); exit 1; }; }; }
---
>   working_environ=yes
13796a13761,13764
> if test "${with_tcp}" = "builtin"; then
>     LSP_FEATURES="(cons :builtin-sockets ${LSP_FEATURES})"
>     with_tcp=yes
> fi
Index: src/c/symbols_list.h
===================================================================
RCS file: /cvsroot/ecls/ecl/src/c/symbols_list.h,v
retrieving revision 1.253
diff -r1.253 symbols_list.h
1177a1178,1179
> #else
> {EXT_ "SETENV", SI_ORDINARY, NULL, -1, OBJNULL},
1229a1232,1233
> #else
> {SYS_ "*PROFILE-ARRAY*", SI_SPECIAL, NULL, -1, OBJNULL},
1239a1244,1247
> #else
> {SYS_ "PROFILE", SI_ORDINARY, NULL, -1, OBJNULL},
> {SYS_ "CLEAR-PROFILE", SI_ORDINARY, NULL, -1, OBJNULL},
> {SYS_ "DISPLAY-PROFILE", SI_ORDINARY, NULL, -1, OBJNULL},
1635a1644,1645
> #else
> {SYS_ "LOAD-BINARY", SI_ORDINARY, NULL, -1, OBJNULL},
1643a1654,1657
> #else
> {SYS_ "CALL-CFUN", SI_ORDINARY, NULL, -1, OBJNULL},
> {KEY_ "CALLBACK", KEYWORD, NULL, -1, OBJNULL},
> {SYS_ "MAKE-DYNAMIC-CALLBACK", SI_ORDINARY, NULL, -1, OBJNULL},
1669a1684,1689
> #else
> {SYS_ "*RELATIVE-PACKAGE-NAMES*", SI_SPECIAL, NULL, -1, RELATIVE_PACKAGES_P},
> {KEY_ "RELATIVE-PACKAGE-NAMES", KEYWORD, NULL, -1, OBJNULL},
> {SYS_ "FIND-RELATIVE-PACKAGE", SI_ORDINARY, NULL, -1, OBJNULL},
> {SYS_ "PACKAGE-PARENT", SI_ORDINARY, NULL, -1, OBJNULL},
> {SYS_ "PACKAGE-CHILDREN", SI_ORDINARY, NULL, -1, OBJNULL},
1675a1696,1697
> #else
> {SYS_ "GC-STATS", SI_ORDINARY, NULL, 1, OBJNULL},
Index: src/c/symbols_list2.h
===================================================================
RCS file: /cvsroot/ecls/ecl/src/c/symbols_list2.h,v
retrieving revision 1.132
diff -r1.132 symbols_list2.h
1177a1178,1179
> #else
> {EXT_ "SETENV",NULL},
1229a1232,1233
> #else
> {SYS_ "*PROFILE-ARRAY*",NULL},
1239a1244,1247
> #else
> {SYS_ "PROFILE",NULL},
> {SYS_ "CLEAR-PROFILE",NULL},
> {SYS_ "DISPLAY-PROFILE",NULL},
1635a1644,1645
> #else
> {SYS_ "LOAD-BINARY",NULL},
1643a1654,1657
> #else
> {SYS_ "CALL-CFUN",NULL},
> {KEY_ "CALLBACK",NULL},
> {SYS_ "MAKE-DYNAMIC-CALLBACK",NULL},
1669a1684,1689
> #else
> {SYS_ "*RELATIVE-PACKAGE-NAMES*",NULL},
> {KEY_ "RELATIVE-PACKAGE-NAMES",NULL},
> {SYS_ "FIND-RELATIVE-PACKAGE",NULL},
> {SYS_ "PACKAGE-PARENT",NULL},
> {SYS_ "PACKAGE-CHILDREN",NULL},
1675a1696,1697
> #else
> {SYS_ "GC-STATS",NULL},
Index: src/clos/defclass.lsp
===================================================================
RCS file: /cvsroot/ecls/ecl/src/clos/defclass.lsp,v
retrieving revision 1.28
diff -r1.28 defclass.lsp
121c121
< #+cross
---
> #+nil
Index: src/cmp/cmpmain.lsp
===================================================================
RCS file: /cvsroot/ecls/ecl/src/cmp/cmpmain.lsp,v
retrieving revision 1.180
diff -r1.180 cmpmain.lsp
334c334
<   (let ((asdf (find-package "ASDF"))
---
>   (let ((asdf #+asdf (find-package "ASDF"))
Index: src/gc/darwin_stop_world.c
===================================================================
RCS file: /cvsroot/ecls/ecl/src/gc/darwin_stop_world.c,v
retrieving revision 1.10
diff -r1.10 darwin_stop_world.c
176a177,198
> 
> #       elif defined(ARM32)
>           lo = (void*)state.__sp;
> 
>           GC_push_one(state.__r[0]);
>           GC_push_one(state.__r[1]);
>           GC_push_one(state.__r[2]);
>           GC_push_one(state.__r[3]);
>           GC_push_one(state.__r[4]);
>           GC_push_one(state.__r[5]);
>           GC_push_one(state.__r[6]);
>           GC_push_one(state.__r[7]);
>           GC_push_one(state.__r[8]);
>           GC_push_one(state.__r[9]);
>           GC_push_one(state.__r[10]);
>           GC_push_one(state.__r[11]);
>           GC_push_one(state.__r[12]);
>           /* GC_push_one(state.__sp); */
>           GC_push_one(state.__lr);
>           GC_push_one(state.__pc);
>           GC_push_one(state.__cpsr);
> 
325a348,377
> #      elif defined(ARM32)
>         GC_THREAD_STATE_T info;
>         mach_msg_type_number_t outCount = THREAD_STATE_MAX;
>         r = thread_get_state(thread, GC_MACH_THREAD_STATE, (natural_t *)&info,
>                              &outCount);
>         if(r != KERN_SUCCESS)
>           ABORT("task_get_state failed");
> 
>         hi = (ptr_t)FindTopOfStack(info . __sp);
> 
>         lo = (void*)info.__sp;
> 
>         GC_push_one(info.__r[0]);
>         GC_push_one(info.__r[1]);
>         GC_push_one(info.__r[2]);
>         GC_push_one(info.__r[3]);
>         GC_push_one(info.__r[4]);
>         GC_push_one(info.__r[5]);
>         GC_push_one(info.__r[6]);
>         GC_push_one(info.__r[7]);
>         GC_push_one(info.__r[8]);
>         GC_push_one(info.__r[9]);
>         GC_push_one(info.__r[10]);
>         GC_push_one(info.__r[11]);
>         GC_push_one(info.__r[12]);
>         /* GC_push_one(info.__sp); */
>         GC_push_one(info.__lr);
>         GC_push_one(info.__pc);
>         GC_push_one(info.__cpsr);
> 
Index: src/gc/include/private/gc_priv.h
===================================================================
RCS file: /cvsroot/ecls/ecl/src/gc/include/private/gc_priv.h,v
retrieving revision 1.9
diff -r1.9 gc_priv.h
404,406c404,410
< #		error define GC_THREAD_STATE_T
< #		define GC_MACH_THREAD_STATE MACHINE_THREAD_STATE
< #		define GC_MACH_THREAD_STATE_COUNT MACHINE_THREAD_STATE_COUNT
---
> #         if defined(ARM32)
> #           define GC_THREAD_STATE_T arm_thread_state_t
> #         else
> #           error define GC_THREAD_STATE_T
> #         endif
> #         define GC_MACH_THREAD_STATE MACHINE_THREAD_STATE
> #         define GC_MACH_THREAD_STATE_COUNT MACHINE_THREAD_STATE_COUNT
Index: src/gc/include/private/gcconfig.h
===================================================================
RCS file: /cvsroot/ecls/ecl/src/gc/include/private/gcconfig.h,v
retrieving revision 1.12
diff -r1.12 gcconfig.h
63a64,68
> /* And one for Darwin: */
> # if defined(macosx) || (defined(__APPLE__) && defined(__MACH__))
> #   define DARWIN
> # endif
> 
67c72
< #    if !defined(LINUX) && !defined(NETBSD)
---
> #    if !defined(LINUX) && !defined(NETBSD) && !defined(DARWIN)
293,294c298
< # if defined(macosx) || (defined(__APPLE__) && defined(__MACH__))
< #   define DARWIN
---
> # if defined(DARWIN)
303a308,311
> #   elif defined(__arm__)
> #    define ARM32
> #    define mach_type_known
> #    define DARWIN_DONT_PARSE_STACK
758c766,770
< #     define DYNAMIC_LOADING
---
> #     ifdef IPHONE
> #       undef DYNAMIC_LOADING
> #     else
> #       define DYNAMIC_LOADING
> #     endif
775,776c787,793
< #     define USE_MMAP
< #     define USE_MMAP_ANON
---
> #     ifdef IPHONE
> #       undef USE_MMAP
> #       undef USE_MMAP_ANON
> #     else
> #       define USE_MMAP
> #       define USE_MMAP_ANON
> #     endif
1285c1302,1306
< #     define DYNAMIC_LOADING
---
> #     ifdef IPHONE
> #       undef DYNAMIC_LOADING
> #     else
> #       define DYNAMIC_LOADING
> #     endif
1773a1795,1806
> #   ifdef DARWIN
>       /* iPhone */
> #     define OS_TYPE "DARWIN"
> #     define DATASTART ((ptr_t) get_etext())
> #     define DATAEND    ((ptr_t) get_end())
> /* #define STACKBOTTOM ((ptr_t) 0x30000000) */ /* FIXME: Is this needed? */
> #     define HEURISTIC1
> #     ifndef USE_MMAP
> #       define USE_MMAP
> #     endif
> #     define USE_MMAP_ANON
> #   endif
1882c1915,1919
< #     define DYNAMIC_LOADING
---
> #     ifdef IPHONE
> #       undef DYNAMIC_LOADING
> #     else
> #       define DYNAMIC_LOADING
> #     endif
Index: src/gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/arm.h
===================================================================
RCS file: /cvsroot/ecls/ecl/src/gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/arm.h,v
retrieving revision 1.1
diff -r1.1 arm.h
35,36c35,42
<  * but defines only one of __ARM_ARCH_x__ to be true			*/
< #if defined(__ARM_ARCH_6__) || defined(__ARM_ARCH_6K__) || defined(__ARM_ARCH_7__)  
---
>  * but defines only one of __ARM_ARCH_x__ to be true                    */
> #if defined(__ARM_ARCH_6__) || defined(__ARM_ARCH_6J__) \
>         || defined(__ARM_ARCH_6K__) || defined(__ARM_ARCH_6ZK__) \
>         || defined(__ARM_ARCH_7__) || defined(__ARM_ARCH_7A__) \
>         || defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7R__)
> 
> #include "../standard_ao_double_t.h"
> 
38c44
< AO_nop_full()
---
> AO_nop_full(void)
52c58
< AO_load(volatile AO_t *addr)
---
> AO_load(const volatile AO_t *addr)
54,56c60,62
<   /* Cast away the volatile for architectures like IA64 where	*/
<   /* volatile adds barrier semantics.				*/
<   return (*(AO_t *)addr);
---
>   /* Cast away the volatile for architectures like IA64 where   */
>   /* volatile adds barrier semantics.                           */
>   return (*(const AO_t *)addr);
87c93
< 	unsigned long tmp;
---
>         AO_t    flag;
89,96c95,102
< 	__asm__ __volatile__("@AO_store\n"
< "1:	ldrex	%0, [%1]\n"
< "	strex	%0, %2, [%1]\n"
< "	teq	%0, #0\n"
< "	bne	1b"
< 	: "=&r"(tmp)
< 	: "r" (addr), "r"(value)
< 	: "cc","memory");
---
>         __asm__ __volatile__("@AO_store\n"
> "1:     ldrex   %0, [%2]\n"
> "       strex   %0, %3, [%2]\n"
> "       teq     %0, #0\n"
> "       bne     1b"
>         : "=&r"(flag), "+m"(*addr)
>         : "r" (addr), "r"(value)
>         : "cc");
114,125d119
< 	
< 	AO_TS_t oldval;
< 	unsigned long tmp;
< 
< 	__asm__ __volatile__("@AO_test_and_set\n"
< "1:	ldrex	%0, [%2]\n"
< "	strex	%1, %3, [%2]\n"
< "	teq	%1, #0\n"
< "	bne	1b\n"
< 	: "=&r"(oldval),"=&r"(tmp)
< 	: "r"(addr), "r"(1)
< 	: "memory","cc");
127c121,133
< 	return oldval;
---
>         AO_TS_t oldval;
>         unsigned long flag;
> 
>         __asm__ __volatile__("@AO_test_and_set\n"
> "1:     ldrex   %0, [%3]\n"
> "       strex   %1, %4, [%3]\n"
> "       teq             %1, #0\n"
> "       bne             1b\n"
>         : "=&r"(oldval),"=&r"(flag), "+m"(*addr)
>         : "r"(addr), "r"(1)
>         : "cc");
> 
>         return oldval;
136,137c142,143
< 	unsigned long tmp,tmp2;
< 	AO_t result;
---
>         unsigned long flag,tmp;
>         AO_t result;
139,147c145,153
< 	__asm__ __volatile__("@AO_fetch_and_add\n"
< "1:	ldrex	%0, [%4]\n"			/* get original			  */
< "	add     %2, %3, %0\n"		/* sum up */
< "	strex	%1, %2, [%4]\n"		/* store them */
< "	teq	%1, #0\n"
< "	bne	1b\n"
< 	: "=&r"(result),"=&r"(tmp),"=&r"(tmp2)
< 	: "r"(incr), "r"(p)
< 	: "cc","memory");
---
>         __asm__ __volatile__("@AO_fetch_and_add\n"
> "1:     ldrex   %0, [%5]\n"                     /* get original         */
> "       add     %2, %0, %4\n"           /* sum up in incr       */
> "       strex   %1, %2, [%5]\n"         /* store them           */
> "       teq             %1, #0\n"
> "       bne             1b\n"
>         : "=&r"(result),"=&r"(flag),"=&r"(tmp),"+m"(*p) /* 0..3 */
>         : "r"(incr), "r"(p)                                                             /* 4..5 */
>         : "cc");
149c155
< 	return result;
---
>         return result;
158,159c164,165
< 	unsigned long tmp,tmp2;
< 	AO_t result;
---
>         unsigned long flag,tmp;
>         AO_t result;
161,169c167,175
< 	__asm__ __volatile__("@AO_fetch_and_add1\n"
< "1:	ldrex	%0, [%3]\n"			/* get original	  */
< "	add     %1, %0, #1\n"		/* increment */
< "	strex	%2, %1, [%3]\n"		/* store them */
< "	teq	%2, #0\n"
< "	bne	1b\n"
< 	: "=&r"(result), "=&r"(tmp), "=&r"(tmp2)
< 	: "r"(p)
< 	: "cc","memory");
---
>         __asm__ __volatile__("@AO_fetch_and_add1\n"
> "1:     ldrex   %0, [%4]\n"                     /* get original   */
> "       add     %1, %0, #1\n"           /* increment */
> "       strex   %2, %1, [%4]\n"         /* store them */
> "       teq             %2, #0\n"
> "       bne             1b\n"
>         : "=&r"(result), "=&r"(tmp), "=&r"(flag), "+m"(*p)
>         : "r"(p)
>         : "cc");
171c177
< 	return result;
---
>         return result;
180,181c186,187
< 	unsigned long tmp,tmp2;
< 	AO_t result;
---
>         unsigned long flag,tmp;
>         AO_t result;
183,191c189,197
< 	__asm__ __volatile__("@ AO_fetch_and_sub1\n"
< "1:	ldrex	%0, [%3]\n"			/* get original	  */
< "	sub     %1, %0, #1\n"		/* increment */
< "	strex	%2, %1, [%3]\n"		/* store them */
< "	teq	%2, #0\n"
< "	bne	1b\n"
< 	: "=&r"(result), "=&r"(tmp), "=&r"(tmp2)
< 	: "r"(p)
< 	: "cc","memory");
---
>         __asm__ __volatile__("@AO_fetch_and_sub1\n"
> "1:     ldrex   %0, [%4]\n"                     /* get original   */
> "       sub     %1, %0, #1\n"           /* decrement */
> "       strex   %2, %1, [%4]\n"         /* store them */
> "       teq             %2, #0\n"
> "       bne             1b\n"
>         : "=&r"(result), "=&r"(tmp), "=&r"(flag), "+m"(*p)
>         : "r"(p)
>         : "cc");
193c199
< 	return result;
---
>         return result;
202c208
< 		  	     	AO_t old_val, AO_t new_val) 
---
>                                 AO_t old_val, AO_t new_val)
204c210
<   	 AO_t result,tmp;
---
>          AO_t result,tmp;
206,216c212,221
< 	__asm__ __volatile__("@ AO_compare_and_swap\n"
< "1:	ldrex	%1, [%2]\n"			/* get original	*/
< "	mov		%0, #2\n"			/* store a flag */
< "	teq		%1, %3\n"			/* see if match */
< "	strexeq	%0, %4, [%2]\n"		/* store new one if matched */
< "	teq		%0, #1\n"
< "	beq		1b\n"				/* if update failed, repeat */
< "	eor		%0, %0, #2\n"		/* if succeded, return 2, else 0 */
< 	: "=&r"(result), "=&r"(tmp)
< 	: "r"(addr), "r"(old_val), "r"(new_val)
< 	: "cc","memory");
---
>         __asm__ __volatile__("@ AO_compare_and_swap\n"
> "1:     mov             %0, #2\n"                       /* store a flag */
> "       ldrex   %1, [%3]\n"                     /* get original */
> "       teq             %1, %4\n"                       /* see if match */
> "       strexeq %0, %5, [%3]\n"         /* store new one if matched */
> "       teq             %0, #1\n"
> "       beq             1b\n"                           /* if update failed, repeat */
>         : "=&r"(result), "=&r"(tmp), "+m"(*addr)
>         : "r"(addr), "r"(old_val), "r"(new_val)
>         : "cc");
218c223
< 	return (result>>1);
---
>         return !(result&2);                     /* if succeded, return 1, else 0 */
221a227,255
> AO_INLINE int
> AO_compare_double_and_swap_double(volatile AO_double_t *addr,
>                                                           AO_t old_val1, AO_t old_val2,
>                                                           AO_t new_val1, AO_t new_val2)
> {
>         double_ptr_storage old_val = ((double_ptr_storage)old_val2 << 32) | old_val1;
>         double_ptr_storage new_val = ((double_ptr_storage)new_val2 << 32) | new_val1;
> 
>     double_ptr_storage tmp;
>         int result;
> 
>         while(1) {
>                 __asm__ __volatile__("@ AO_compare_and_swap_double\n"
>                 "       ldrexd  %0, [%1]\n"                     /* get original to r1&r2*/
>                         : "=&r"(tmp)
>                         : "r"(addr)
>                         : "cc");
>                 if(tmp != old_val)      return 0;
>                 __asm__ __volatile__(
>                 "       strexd  %0, %2, [%3]\n" /* store new one if matched */
>                         : "=&r"(result),"+m"(*addr)
>                         : "r"(new_val), "r"(addr)
>                         : "cc");
>                 if(!result)     return 1;
>         }
> }
> 
> #define AO_HAVE_compare_double_and_swap_double
> 
Index: src/gmp/mpn/arm/invert_limb.asm
===================================================================
RCS file: /cvsroot/ecls/ecl/src/gmp/mpn/arm/invert_limb.asm,v
retrieving revision 1.3
diff -r1.3 invert_limb.asm
9c9
< dnl  by the Free Software Foundation; either version 2.1 of the License, or (at
---
> dnl  by the Free Software Foundation; either version 3 of the License, or (at
18,20c18
< dnl  along with the GNU MP Library; see the file COPYING.LIB.  If not, write
< dnl  to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
< dnl  Boston, MA 02110-1301, USA.
---
> dnl  along with the GNU MP Library.  If not, see http://www.gnu.org/licenses/.
24,26c22,24
< C INPUT PARAMETERS
< define(`d',`r0')	C number to be inverted
< 
---
> ifdef(`APPLE',
> `define(`RODATA',`.const')',
> `define(`RODATA',`.section .rodata')')
27a26
> ASM_START()
29,97c28,90
< 	stmfd	sp!, {r4, lr}
< 	mov	r3, d, lsr #23
< 	sub	r3, r3, #256
< 	add	r2, pc, #invtab-.-8
< 	mov	r3, r3, lsl #1
< 	ldrh	r1, [r2, r3]		C get initial approximation from table
< 	mov	r2, r1, lsl #6		C start iteration 1
< 	mul	ip, r2, r2
< 	umull	lr, r4, ip, d
< 	mov	r2, r4, lsl #1
< 	rsb	r2, r2, r1, lsl #23	C iteration 1 complete
< 	umull	ip, r3, r2, r2		C start iteration 2
< 	umull	lr, r4, r3, d
< 	umull	r3, r1, ip, d
< 	adds	lr, lr, r1
< 	addcs	r4, r4, #1
< 	mov	r3, lr, lsr #30
< 	orr	r4, r3, r4, lsl #2
< 	mov	lr, lr, lsl #2
< 	cmn	lr, #1
< 	rsc	r2, r4, r2, lsl #2	C iteration 2 complete
< 	umull	ip, r1, d, r2		C start adjustment step
< 	add	r1, r1, d
< 	cmn	r1, #1
< 	beq	L(1)
< 	adds	ip, ip, d
< 	adc	r1, r1, #0
< 	add	r2, r2, #1
< L(1):
< 	adds	r3, ip, d
< 	adcs	r1, r1, #0
< 	moveq	r0, r2
< 	addne	r0, r2, #1
< 	ldmfd	sp!, {r4, pc}
< 
< invtab:
< 	.short	1023,1020,1016,1012,1008,1004,1000,996
< 	.short	992,989,985,981,978,974,970,967
< 	.short	963,960,956,953,949,946,942,939
< 	.short	936,932,929,926,923,919,916,913
< 	.short	910,907,903,900,897,894,891,888
< 	.short	885,882,879,876,873,870,868,865
< 	.short	862,859,856,853,851,848,845,842
< 	.short	840,837,834,832,829,826,824,821
< 	.short	819,816,814,811,809,806,804,801
< 	.short	799,796,794,791,789,787,784,782
< 	.short	780,777,775,773,771,768,766,764
< 	.short	762,759,757,755,753,751,748,746
< 	.short	744,742,740,738,736,734,732,730
< 	.short	728,726,724,722,720,718,716,714
< 	.short	712,710,708,706,704,702,700,699
< 	.short	697,695,693,691,689,688,686,684
< 	.short	682,680,679,677,675,673,672,670
< 	.short	668,667,665,663,661,660,658,657
< 	.short	655,653,652,650,648,647,645,644
< 	.short	642,640,639,637,636,634,633,631
< 	.short	630,628,627,625,624,622,621,619
< 	.short	618,616,615,613,612,611,609,608
< 	.short	606,605,604,602,601,599,598,597
< 	.short	595,594,593,591,590,589,587,586
< 	.short	585,583,582,581,579,578,577,576
< 	.short	574,573,572,571,569,568,567,566
< 	.short	564,563,562,561,560,558,557,556
< 	.short	555,554,553,551,550,549,548,547
< 	.short	546,544,543,542,541,540,539,538
< 	.short	537,536,534,533,532,531,530,529
< 	.short	528,527,526,525,524,523,522,521
< 	.short	520,519,518,517,516,515,514,513
< EPILOGUE(mpn_invert_limb)
---
> 	ldr	r2, L(4)
> L(2):	add	r2, pc, r2
> 	mov	r3, r0, lsr #23
> 	mov	r3, r3, asl #1
> 	ldrh	r3, [r3, r2]
> 	mov	r1, r3, asl #17
> 	mul	r3, r3, r3
> 	umull	r12, r2, r3, r0
> 	sub	r1, r1, r2, asl #1
> 	umull	r12, r2, r1, r1
> 	umull	r3, r12, r0, r12
> 	umull	r2, r3, r0, r2
> 	adds	r2, r2, r12
> 	adc	r3, r3, #0
> 	rsb	r1, r3, r1
> 	mvn	r2, r2, lsr #30
> 	add	r2, r2, r1, asl #2
> 	umull	r3, r12, r0, r2
> 	adds	r1, r3, r0
> 	adc	r12, r12, r0
> 	rsb	r0, r12, r2
> 	bx	lr
> 
> 	ALIGN(4)
> L(4):	.word	approx_tab-8-512-L(2)
> EPILOGUE()
> 
> 	RODATA
> 	ALIGN(2)
> approx_tab:
> 	.short    0xffc0,0xfec0,0xfdc0,0xfcc0,0xfbc0,0xfac0,0xfa00,0xf900
> 	.short    0xf800,0xf700,0xf640,0xf540,0xf440,0xf380,0xf280,0xf180
> 	.short    0xf0c0,0xefc0,0xef00,0xee00,0xed40,0xec40,0xeb80,0xeac0
> 	.short    0xe9c0,0xe900,0xe840,0xe740,0xe680,0xe5c0,0xe500,0xe400
> 	.short    0xe340,0xe280,0xe1c0,0xe100,0xe040,0xdf80,0xdec0,0xde00
> 	.short    0xdd40,0xdc80,0xdbc0,0xdb00,0xda40,0xd980,0xd8c0,0xd800
> 	.short    0xd740,0xd680,0xd600,0xd540,0xd480,0xd3c0,0xd340,0xd280
> 	.short    0xd1c0,0xd140,0xd080,0xcfc0,0xcf40,0xce80,0xcdc0,0xcd40
> 	.short    0xcc80,0xcc00,0xcb40,0xcac0,0xca00,0xc980,0xc8c0,0xc840
> 	.short    0xc780,0xc700,0xc640,0xc5c0,0xc540,0xc480,0xc400,0xc380
> 	.short    0xc2c0,0xc240,0xc1c0,0xc100,0xc080,0xc000,0xbf80,0xbec0
> 	.short    0xbe40,0xbdc0,0xbd40,0xbc80,0xbc00,0xbb80,0xbb00,0xba80
> 	.short    0xba00,0xb980,0xb900,0xb840,0xb7c0,0xb740,0xb6c0,0xb640
> 	.short    0xb5c0,0xb540,0xb4c0,0xb440,0xb3c0,0xb340,0xb2c0,0xb240
> 	.short    0xb1c0,0xb140,0xb0c0,0xb080,0xb000,0xaf80,0xaf00,0xae80
> 	.short    0xae00,0xad80,0xad40,0xacc0,0xac40,0xabc0,0xab40,0xaac0
> 	.short    0xaa80,0xaa00,0xa980,0xa900,0xa8c0,0xa840,0xa7c0,0xa740
> 	.short    0xa700,0xa680,0xa600,0xa5c0,0xa540,0xa4c0,0xa480,0xa400
> 	.short    0xa380,0xa340,0xa2c0,0xa240,0xa200,0xa180,0xa140,0xa0c0
> 	.short    0xa080,0xa000,0x9f80,0x9f40,0x9ec0,0x9e80,0x9e00,0x9dc0
> 	.short    0x9d40,0x9d00,0x9c80,0x9c40,0x9bc0,0x9b80,0x9b00,0x9ac0
> 	.short    0x9a40,0x9a00,0x9980,0x9940,0x98c0,0x9880,0x9840,0x97c0
> 	.short    0x9780,0x9700,0x96c0,0x9680,0x9600,0x95c0,0x9580,0x9500
> 	.short    0x94c0,0x9440,0x9400,0x93c0,0x9340,0x9300,0x92c0,0x9240
> 	.short    0x9200,0x91c0,0x9180,0x9100,0x90c0,0x9080,0x9000,0x8fc0
> 	.short    0x8f80,0x8f40,0x8ec0,0x8e80,0x8e40,0x8e00,0x8d80,0x8d40
> 	.short    0x8d00,0x8cc0,0x8c80,0x8c00,0x8bc0,0x8b80,0x8b40,0x8b00
> 	.short    0x8a80,0x8a40,0x8a00,0x89c0,0x8980,0x8940,0x88c0,0x8880
> 	.short    0x8840,0x8800,0x87c0,0x8780,0x8740,0x8700,0x8680,0x8640
> 	.short    0x8600,0x85c0,0x8580,0x8540,0x8500,0x84c0,0x8480,0x8440
> 	.short    0x8400,0x8380,0x8340,0x8300,0x82c0,0x8280,0x8240,0x8200
> 	.short    0x81c0,0x8180,0x8140,0x8100,0x80c0,0x8080,0x8040,0x8000
> ASM_END()
