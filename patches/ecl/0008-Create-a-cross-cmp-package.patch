From 306d2ff7683c09a97d2d9a84b05e3f62a6a9e2b1 Mon Sep 17 00:00:00 2001
From: Sylvain Ageneau <ageneau@gmail.com>
Date: Sat, 17 Nov 2012 01:20:10 -0300
Subject: [PATCH 8/8] Create a cross-cmp package

---
 src/Makefile.in         |    2 +-
 src/cmp/crosscmp.lsp.in |  100 +++++++++++++++++++++++------------------------
 2 files changed, 50 insertions(+), 52 deletions(-)

diff --git a/src/Makefile.in b/src/Makefile.in
index 60b087e..8dfb7fe 100644
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -203,7 +203,7 @@ install:
 	$(mkinstalldirs) $(DESTDIR)$(mandir)/man$(manext)
 	$(INSTALL_DATA) doc/ecl.man $(DESTDIR)$(mandir)/man$(manext)/ecl.$(manext)
 	$(INSTALL_DATA) doc/ecl-config.man $(DESTDIR)$(mandir)/man$(manext)/ecl-config.$(manext)
-	$(INSTALL_DATA) cmp/crosscmp.lsp $(DESTDIR)$(libdir)
+	$(INSTALL_DATA) cmp/crosscmp.lsp $(DESTDIR)$(ecldir)
 
 flatinstall: build-stamp
 	$(MAKE) DESTDIR=$(DESTDIR) bindir=$(prefix) libdir=$(prefix) \
diff --git a/src/cmp/crosscmp.lsp.in b/src/cmp/crosscmp.lsp.in
index 4407800..3038a60 100644
--- a/src/cmp/crosscmp.lsp.in
+++ b/src/cmp/crosscmp.lsp.in
@@ -11,55 +11,53 @@
 
 ;;;; CROSSCMP -- Cross compiler
 
-(in-package "COMPILER")
+(in-package cross-cmp)
 
-(defmacro with-crosscomp-env (body)
-  `(let ((old-translation (si::pathname-translations "SYS")))
-     (unwind-protect
-	  (progn
-	    (si::pathname-translations "SYS" '(("**;*.*.*" "@ecldir\@/**/*.*")))
-	    (let ((*features* @LSP_FEATURES@)
-		  (*cmpinclude* "<ecl/ecl-cmp.h>")
-		  (*cc* "@ECL_CC@")
-		  (*ld* "@ECL_CC@")
-		  (*ranlib* "@RANLIB@")
-		  (*ar* "@AR@")
-		  (*cc-flags* "@CPPFLAGS@ @CFLAGS@ @ECL_CFLAGS@")
-		  (*cc-optimize* #-msvc "-O2"
-				 #+msvc "@CFLAGS_OPTIMIZE@")
-		  (*ld-format* #-msvc "~A -o ~S -L~S ~{~S ~} ~@[~S~]~{ '~A'~} ~A"
-			       #+msvc "~A -Fe~S~* ~{~S ~} ~@[~S~]~{ '~A'~} ~A")
-		  (*cc-format* #-msvc "~A -I. \"-I~A\" ~A ~:[~*~;~A~] -w -c \"~A\" -o \"~A\"~{ '~A'~}"
-			       #+msvc "~A -I. -I\"~A\" ~A ~:[~*~;~A~] -w -c \"~A\" -Fo\"~A\"~{ '~A'~}")
-		  
-		  (*ld-flags* (if (member :dlopen *features*)
-				  "@LDFLAGS@ -L@libdir\@ -lecl @CORE_LIBS@ @FASL_LIBS@ @LIBS@"
-				  (if (member :mscv *features*)
-				      "@LDFLAGS@ -L@libdir\@ -lecl @FASL_LIBS@ @LIBS@"
-				      #+msvc "@LDFLAGS@ ecl.lib @CLIBS@")))
-		  
-		  #+dlopen
-		  (*ld-shared-flags* #-msvc "@SHARED_LDFLAGS@ @LDFLAGS@ -L@libdir\@ -lecl @FASL_LIBS@ @LIBS@"
-				     #+msvc "@SHARED_LDFLAGS@ @LDFLAGS@ ecl.lib @CLIBS@")
-		  #+dlopen
-		  (*ld-bundle-flags* #-msvc "@BUNDLE_LDFLAGS@ @LDFLAGS@ -L@libdir\@ -lecl @FASL_LIBS@ @LIBS@"
-				     #+msvc "@BUNDLE_LDFLAGS@ @LDFLAGS@ ecl.lib @CLIBS@")
-		  
-		  (+shared-library-prefix+ "@SHAREDPREFIX@")
-		  (+shared-library-extension+ "@SHAREDEXT@")
-		  (+shared-library-format+ "@SHAREDPREFIX@~a.@SHAREDEXT@")
-		  (+static-library-prefix+ "@LIBPREFIX@")
-		  (+static-library-extension+ "@LIBEXT@")
-		  (+static-library-format+ "@LIBPREFIX@~a.@LIBEXT@")
-		  (+object-file-extension+ "@OBJEXT@")
-		  (+executable-file-format+ "~a@EXEEXT@")
-		  
-		  (*ecl-include-directory* "@includedir\@")
-		  (*ecl-library-directory* "@libdir\@")
-		  
-		  (*ld-rpath*
-		   (let ((x "@ECL_LDRPATH@"))
-		     (and (plusp (length x))
-			  (format nil x *ecl-library-directory*)))))
-	      (,@body)))
-       (si::pathname-translations "SYS" old-translation))))
\ No newline at end of file
+(setf (gethash  "@host@" *cross-compilers*)
+      (make-instance 'cross-compiler
+		     :features @LSP_FEATURES@
+		     :sys-pathname-translation '(("**;*.*.*" "@ecldir\@/**/*.*"))
+		     :cmpinclude "<ecl/ecl-cmp.h>"
+		     :cc "@ECL_CC@"
+		     :ld "@ECL_CC@"
+		     :ranlib "@RANLIB@"
+		     :ar "@AR@"
+		     :cc-flags "@CPPFLAGS@ @CFLAGS@ @ECL_CFLAGS@"
+		     :cc-optimize #-msvc "-O2"
+		     #+msvc "@CFLAGS_OPTIMIZE@"
+		     
+		     :ld-format #-msvc "~A -o ~S -L~S ~{~S ~} ~@[~S~]~{ '~A'~} ~A"
+		     #+msvc "~A -Fe~S~* ~{~S ~} ~@[~S~]~{ '~A'~} ~A"
+      
+		     :cc-format #-msvc "~A -I. \"-I~A\" ~A ~:[~*~;~A~] -w -c \"~A\" -o \"~A\"~{ '~A'~}"
+		     #+msvc "~A -I. -I\"~A\" ~A ~:[~*~;~A~] -w -c \"~A\" -Fo\"~A\"~{ '~A'~}"
+		      
+		     :ld-flags (if (member :dlopen *features*)
+				   "@LDFLAGS@ -L@libdir\@ -lecl @CORE_LIBS@ @FASL_LIBS@ @LIBS@"
+				   (if (member :mscv *features*)
+				       "@LDFLAGS@ -L@libdir\@ -lecl @FASL_LIBS@ @LIBS@"
+				       #+msvc "@LDFLAGS@ ecl.lib @CLIBS@" user-ld-flags))
+		      
+		     :ld-shared-flags #-msvc "@SHARED_LDFLAGS@ @LDFLAGS@ -L@libdir\@ -lecl @FASL_LIBS@ @LIBS@"
+		     #+msvc "@SHARED_LDFLAGS@ @LDFLAGS@ ecl.lib @CLIBS@"
+
+		     :ld-bundle-flags #-msvc "@BUNDLE_LDFLAGS@ @LDFLAGS@ -L@libdir\@ -lecl @FASL_LIBS@ @LIBS@"
+		     #+msvc "@BUNDLE_LDFLAGS@ @LDFLAGS@ ecl.lib @CLIBS@"
+		      
+		     :shared-library-prefix "@SHAREDPREFIX@"
+		     :shared-library-extension "@SHAREDEXT@"
+		     :shared-library-format "@SHAREDPREFIX@~a.@SHAREDEXT@"
+		     :static-library-prefix "@LIBPREFIX@"
+		     :static-library-extension "@LIBEXT@"
+		     :static-library-format "@LIBPREFIX@~a.@LIBEXT@"
+		     :object-file-extension "@OBJEXT@"
+		     :executable-file-format "~a@EXEEXT@"
+		      
+		     :ecl-include-directory "@includedir\@"
+		     :ecl-library-directory "@libdir\@"
+		      
+		     :ld-rpath (let ((x "@ECL_LDRPATH@"))
+				 (and (plusp (length x))
+				      (format nil x ecl-library-directory)))
+		     :user-cc-flags nil
+		     :user-ld-flags nil))
-- 
1.7.10.4

