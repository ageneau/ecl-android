android specific stuff

From: Sylvain Ageneau <ageneau@gmail.com>


---
 contrib/sockets/sockets.lisp |   53 +++++++++++-
 src/aclocal.m4               |   10 ++
 src/bare.lsp.in              |    8 +-
 src/bare.lsp.in.orig         |  193 ++++++++++++++++++++++++++++++++++++++++++
 src/c/Makefile.in            |    3 -
 src/c/tcp.d                  |    4 +
 src/compile.lsp.in           |   13 ++-
 src/configure                |   12 ++-
 src/configure.in             |   13 +++
 src/gmp/configure            |  189 +++++++++++++++++++++++++++++++++++------
 src/gmp/configure.in         |   15 +++
 11 files changed, 465 insertions(+), 48 deletions(-)
 create mode 100644 src/bare.lsp.in.orig

diff --git a/contrib/sockets/sockets.lisp b/contrib/sockets/sockets.lisp
index 78b0b3b..c45dbf2 100755
--- a/contrib/sockets/sockets.lisp
+++ b/contrib/sockets/sockets.lisp
@@ -107,6 +107,28 @@
   +eagain+ "EAGAIN"
   +eintr+ "EINTR")
 
+#+:eabi
+(define-c-constants
+  +ipproto_ip+ "IPPROTO_IP"
+  +ipproto_icmp+ "IPPROTO_ICMP"
+  +ipproto_igmp+ "IPPROTO_IGMP"
+  +ipproto_ipip+ "IPPROTO_IPIP"
+  +ipproto_tcp+ "IPPROTO_TCP"
+  +ipproto_egp+ "IPPROTO_EGP"
+  +ipproto_pup+ "IPPROTO_PUP"
+  +ipproto_udp+ "IPPROTO_UDP"
+  +ipproto_idp+ "IPPROTO_IDP"
+  +ipproto_dccp+ "IPPROTO_DCCP"
+  +ipproto_rsvp+ "IPPROTO_RSVP"
+  +ipproto_gre+ "IPPROTO_GRE"
+  +ipproto_ipv6+ "IPPROTO_IPV6"
+  +ipproto_esp+ "IPPROTO_ESP"
+  +ipproto_ah+ "IPPROTO_AH"
+  +ipproto_pim+ "IPPROTO_PIM"
+  +ipproto_comp+ "IPPROTO_COMP"
+  +ipproto_sctp+ "IPPROTO_SCTP"
+  +ipproto_raw+ "IPPROTO_RAW")
+
 #+:wsock
 (defconstant +af-named-pipe+ -2)
 
@@ -512,10 +534,37 @@ safe_buffer_pointer(cl_object x, cl_index size)
 
 (defun get-protocol-by-name (string-or-symbol)
   "Calls getprotobyname"
+  #-:eabi
   (let ((string (string string-or-symbol)))
     (c-inline (string) (:cstring) :int
 	      "getprotobyname(#0)->p_proto"
-	      :one-liner t)))
+	      :one-liner t))
+
+  ;; getprotobyname is not yet implemented on bionic
+  #+:eabi
+  (let ((proto (string-downcase (if (symbolp string-or-symbol)
+				    (symbol-name string-or-symbol)
+				    string-or-symbol))))
+    (cond
+      ((string= proto "ip") +ipproto_ip+)
+      ((string= proto "icmp") +ipproto_icmp+)
+      ((string= proto "igmp") +ipproto_igmp+)
+      ((string= proto "ipip") +ipproto_ipip+)
+      ((string= proto "tcp") +ipproto_tcp+)
+      ((string= proto "egp") +ipproto_egp+)
+      ((string= proto "pup") +ipproto_pup+)
+      ((string= proto "udp") +ipproto_udp+)
+      ((string= proto "idp") +ipproto_idp+)
+      ((string= proto "dccp") +ipproto_dccp+)
+      ((string= proto "rsvp") +ipproto_rsvp+)
+      ((string= proto "gre") +ipproto_gre+)
+      ((string= proto "ipv6") +ipproto_ipv6+)
+      ((string= proto "esp") +ipproto_esp+)
+      ((string= proto "ah") +ipproto_ah+)
+      ((string= proto "pim") +ipproto_pim+)
+      ((string= proto "comp") +ipproto_comp+)
+      ((string= proto "sctp") +ipproto_sctp+)
+      ((string= proto "raw") +ipproto_raw+))))
 
 (defun make-inet-address (dotted-quads)
   "Return a vector of octets given a string DOTTED-QUADS in the format
@@ -1636,7 +1685,7 @@ GET-NAME-SERVICE-ERRNO")
 (define-sockopt sockopt-dont-route "SOL_SOCKET" "SO_DONTROUTE" bool)
 (define-sockopt sockopt-linger "SOL_SOCKET" "SO_LINGER" linger)
 
-#-(or :sun4sol2 :linux :wsock :cygwin)
+#-(or :sun4sol2 :linux :eabi :wsock :cygwin)
 (define-sockopt sockopt-reuse-port "SOL_SOCKET" "SO_REUSEPORT" bool)
 
 (define-sockopt sockopt-tcp-nodelay "IPPROTO_TCP" "TCP_NODELAY" bool)
diff --git a/src/aclocal.m4 b/src/aclocal.m4
index 1189251..9a65ddb 100644
--- a/src/aclocal.m4
+++ b/src/aclocal.m4
@@ -86,7 +86,7 @@ dnl Set up a configuration file for the case when we are cross-
 dnl compiling
 dnl
 AC_DEFUN(ECL_CROSS_CONFIG,[
-if test "x${cross_compiling}" = "xyes"; then
+if test "x${cross_compiling}" = "xyes" || test "x${force_cross_compiling}" = "xyes"; then
   if test -n "${with_cross_config}" -a -f "${with_cross_config}"; then
     . ${with_cross_config}
   elif test -f ./cross_config; then
@@ -816,7 +816,7 @@ dnl ----------------------------------------------------------------------
 dnl Check whether we have unnamed POSIX semaphores available
 AC_DEFUN([ECL_POSIX_SEMAPHORES],[
 AC_MSG_CHECKING(working sem_init())
-if test -z "$ECL_WORKING_SEM_INIT"; then
+if test -z "$ECL_WORKING_SEM_INIT" && test "x${cross_compiling}" != "xyes"; then
   AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #include <semaphore.h>
 int main() {
@@ -825,6 +825,8 @@ int main() {
     exit(1);
   exit(0);
 }]])],[ECL_WORKING_SEM_INIT=yes],[ECL_WORKING_SEM_INIT=no],[])
+elif test "x${cross_compiling}" != "xyes"; then
+ECL_WORKING_SEM_INIT=no
 fi
 AC_MSG_RESULT([$ECL_WORKING_SEM_INIT])
 if test $ECL_WORKING_SEM_INIT = yes ; then
@@ -850,7 +852,7 @@ dnl ----------------------------------------------------------------------
 dnl Check "char **environ" is available
 AC_DEFUN([ECL_POSIX_ENVIRON],[
 AC_MSG_CHECKING(working environ)
-if test -z "$ECL_WORKING_ENVIRON"; then
+if test -z "$ECL_WORKING_ENVIRON" && test "x${cross_compiling}" != "xyes"; then
   AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #include <stdlib.h>
 extern char **environ;
@@ -859,6 +861,8 @@ int main() {
     exit(0);
   exit(1);
 }]])],[ECL_WORKING_ENVIRON=yes],[ECL_WORKING_ENVIRON=no],[])
+elif test "x${cross_compiling}" != "xyes"; then
+ECL_WORKING_ENVIRON=yes
 fi
 AC_MSG_RESULT([$ECL_WORKING_ENVIRON])
 if test $ECL_WORKING_ENVIRON = yes ; then
diff --git a/src/bare.lsp.in b/src/bare.lsp.in
index 735f32f..127d479 100644
--- a/src/bare.lsp.in
+++ b/src/bare.lsp.in
@@ -125,7 +125,7 @@
          do (with-open-file (sin file :direction :input)
               (loop for form = (read sin nil :eof)
                  until (eq form :eof)
-                 do (let ((bytecodes (ext::eval-with-env form nil nil nil nil)))
+                 do (let ((bytecodes (si::eval-with-env form nil nil nil nil)))
                       (with-standard-io-syntax
                         (write `(funcall ,bytecodes) :stream sout :circle t :escape t
                                :readably t :pretty nil)))))))
@@ -145,7 +145,8 @@
 
 (defun build-module (name sources &key additional-files
                      (builtin nil) (dir "build:")
-                     ((:prefix si::*init-function-prefix*) "EXT"))
+                     ((:prefix si::*init-function-prefix*) "EXT")
+		     (dont-build-fake-module nil))
   (mapc #'proclaim +ecl-optimization-settings+)
   (let* ((name (string-downcase name)))
     (when additional-files
@@ -158,7 +159,8 @@
       (unless (equalp name "asdf")
         (push (build-fake-asdf name) *module-files*))
       #-:wants-dlopen
-      (push (build-fake-module name sources) *module-files*)
+      (when (not dont-build-fake-module)
+	(push (build-fake-module name sources) *module-files*))
       #+:wants-dlopen
       (push (c::build-fasl name :lisp-files objects) *module-files*))))
 
diff --git a/src/bare.lsp.in.orig b/src/bare.lsp.in.orig
new file mode 100644
index 0000000..9cfd683
--- /dev/null
+++ b/src/bare.lsp.in.orig
@@ -0,0 +1,193 @@
+;;; -*- Mode:Lisp -*-
+;;; @configure_input@
+;;;
+;;; This file can be loaded either in ECL_MIN or in the final executable
+;;; ECL. In both cases, it ensures that we have a working Common-Lisp
+;;; environment (either interpreted, as in ECL_MIN, or compiled, as in ECL),
+;;; that the compiler is loaded, that we use the headers in this directory,
+;;; etc.
+;;;
+;;; * By redefining "SYS:" ECL will be able to
+;;;   find headers and libraries in the build directory.
+;;;
+(princ "
+;;;
+;;; Welcome to bare.lsp. Let's bring this instance up!
+;;;")
+
+(sys:*make-constant '+ecl-optimization-settings+ 
+  '((optimize (safety 2) (speed 1) (debug 1) (space 1))
+    (ext:no-check-arguments-type)))
+(sys:*make-constant '+ecl-unsafe-declarations+
+  '(optimize (safety 0) (speed 3) (debug 0) (space 0)))
+(sys:*make-constant '+ecl-safe-declarations+
+  '(optimize (safety 2) (speed 1) (debug 1) (space 1)))
+
+(si::pathname-translations "SRC" `(("**;*.*.*" "@true_srcdir@/**/*.*")))
+(si::pathname-translations "EXT" `(("**;*.*.*" "@true_srcdir@/../contrib/**/*.*")))
+(si::pathname-translations "BUILD" `(("**;*.*.*" "@true_builddir@/**/*.*")))
+(si::pathname-translations "SYS" '(("**;*.*.*" "@true_builddir@/**/*.*")))
+
+;;;
+;;; * Set ourselves in the 'SYSTEM package
+;;;
+(setq *package* (find-package "SYSTEM"))
+(setq si::*keep-definitions* nil)
+
+;;;
+;;; * Create bogus commit version number
+;;;
+
+(setq si::+commit-id+ "UNKNOWN")
+
+;;;
+;;; * Load Common-Lisp base library
+;;;
+(princ "
+;;;
+;;; About to load lsp/load.lsp
+;;; ")
+
+(if (or (member "ECL-MIN" *features* :test #'string-equal)
+	(member "CROSS" *features* :test #'string-equal))
+  (load "lsp/load.lsp" :verbose nil))
+
+(defun si::process-command-args () )
+
+;;;
+;;; * Load PCL-based Common-Lisp Object System
+;;;
+(setf sys::*gc-verbose* nil)
+#+(or ecl-min cross)
+(progn
+ (terpri)
+ (princ ";;; Loading clos/load.lsp")
+ (load "clos/load.lsp" :verbose nil))
+
+#+cmu-format
+(progn
+ (terpri)
+ (princ ";;; Loading lsp/format.lsp")
+ (load "src:lsp;format.lsp" :verbose nil))
+
+;;;
+;;; * Load the compiler.
+;;;
+
+;; Make sure compiler sees what it should see.
+#-:wants-dlopen (setq *features* (delete :dlopen *features*))
+#+:wants-dlopen (push :dlopen *features*)
+
+(terpri)
+(princ #+(or cross ecl-min) ";;; About to load cmp/load.lsp"
+       #-(or cross ecl-min) ";;; About to load cmp.so")
+
+(load #+(or cross ecl-min) "@ECL_CMPDIR@/load.lsp"
+      #-(or cross ecl-min) "cmp.so")
+
+;;;
+;;; * Change the place where temporary files go to
+;;;
+(si::pathname-translations "TMP" '(("**;*.*.*" "@true_builddir@/**/*.*")))
+
+;;;
+;;; * Remove documentation from compiled files
+;;;
+(setq si::*keep-documentation* nil)
+
+;;;
+;;; * Timed compilation facility.
+;;;
+(defun compile-if-old (destdir sources &rest options)
+  (unless (probe-file destdir)
+    (si::mkdir destdir #o0777))
+  (mapcar #'(lambda (source)
+	      (let ((object (merge-pathnames destdir (compile-file-pathname source :type :object))))
+		(unless (and (probe-file object)
+			     (>= (file-write-date object) (file-write-date source)))
+		  (format t "~&(compile-file ~S :output-file ~S~{ ~S~})~%"
+			  source object options)
+		  (apply #'compile-file source :output-file object options))
+		object))
+	  sources))
+
+(defvar *module-symbols* nil)
+(defvar *module-files* nil)
+
+(defun build-fake-module (name lisp-files)
+  (let* ((output (make-pathname :type "fasb" :defaults name))
+         (pack *package*))
+    (with-open-file (sout output :direction :output :if-exists :supersede
+			  :if-does-not-exist :create)
+      (loop for file in lisp-files
+         and *package* = pack
+         and si::*bytecodes-compiler* = t
+         do (with-open-file (sin file :direction :input)
+              (loop for form = (read sin nil :eof)
+                 until (eq form :eof)
+                 do (let ((bytecodes (ext::eval-with-env form nil nil nil nil)))
+                      (with-standard-io-syntax
+                        (write `(funcall ,bytecodes) :stream sout :circle t :escape t
+                               :readably t :pretty nil)))))))
+    output))
+
+(make-package "ASDF")
+
+(defun build-fake-asdf (name &optional (filename (string name)))
+  (let ((path (make-pathname :name name :type "asd")))
+    (with-open-file (*standard-output* path
+                     :direction :output :if-exists :supersede
+                     :if-does-not-exist :create)
+      (print `(defsystem ,name :class asdf::prebuilt-system
+                         :lib ,(format nil "SYS:~A" filename)
+                         :components ((:compiled-file ,filename)))))
+    path))
+
+(defun build-module (name sources &key additional-files
+                     (builtin nil) (dir "build:")
+                     ((:prefix si::*init-function-prefix*) "EXT"))
+  (mapc #'proclaim +ecl-optimization-settings+)
+  (let* ((name (string-downcase name)))
+    (when additional-files
+      (setf *module-files* (append additional-files *module-files*)))
+    (let* ((objects (compile-if-old dir sources :system-p t :c-file t
+                                    :data-file t :h-file t)))
+      (push (c::build-static-library name :lisp-files objects) *module-files*)
+      (when builtin
+        (push (intern name) *module-symbols*))
+      (unless (equalp name "asdf")
+        (push (build-fake-asdf name) *module-files*))
+      #-(or :wants-dlopen :eabi)
+      (push (build-fake-module name sources) *module-files*)
+      #+:wants-dlopen
+      (push (c::build-fasl name :lisp-files objects) *module-files*))))
+
+;;;
+;;; * Update version number now that SI:SYSTEM is available
+;;;
+
+(when (and (not (member :windows *features*))
+           (probe-file "@top_srcdir@/../.git/"))
+  (when (probe-file "COMMIT-ID")
+    (delete-file "COMMIT-ID"))
+  (when (and (zerop (si::system "(cd \"@top_srcdir@\" && git log --format=oneline -1) > COMMIT-ID"))
+             (probe-file "COMMIT-ID"))
+    (let* ((file (open "COMMIT-ID" :direction :input :element-type :default
+                       :external-format :default))
+           (line (read-line file))
+           (l (length line)))
+      (setq si::+commit-id+ (subseq line 0 (min l 40)))
+      (close file))))
+
+;;;
+;;; * Go back to build directory to start compiling
+;;;
+#+ecl-min
+(setq *features* (cons :stage1 (remove :ecl-min *features*)))
+
+(terpri)
+(princ ";;;
+;;; Now we are in shape to do something useful.
+;;; End of bare.lsp")
+(terpri)
+(setf c::*compiler-break-enable* t)
diff --git a/src/c/Makefile.in b/src/c/Makefile.in
index 495f205..1636a16 100644
--- a/src/c/Makefile.in
+++ b/src/c/Makefile.in
@@ -21,6 +21,7 @@ RM	= @RM@
 EXE	= @EXEEXT@
 DPP	= ./dpp$(EXE)
 RANLIB	= @RANLIB@
+AR	= @AR@
 
 # Data for installation
 #
@@ -101,7 +102,7 @@ ffi_x86_64.c: $(srcdir)/arch/ffi_x86_64.d $(DPP) $(HFILES)
 
 ../libeclmin.a: $(OBJS) all_symbols.o all_symbols2.o
 	$(RM) $@
-	ar cr $@ $(OBJS)
+	$(AR) cr $@ $(OBJS)
 	$(RANLIB) $@
 
 clean:
diff --git a/src/c/tcp.d b/src/c/tcp.d
index e752e47..69e7468 100644
--- a/src/c/tcp.d
+++ b/src/c/tcp.d
@@ -21,7 +21,11 @@
 #if defined(ECL_MS_WINDOWS_HOST)
 #include <winsock.h>
 #else
+#ifdef __ANDROID__
+#include <errno.h>
+#else
 extern int errno;
+#endif
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <sys/un.h>
diff --git a/src/compile.lsp.in b/src/compile.lsp.in
index 0c437ac..4560c0a 100755
--- a/src/compile.lsp.in
+++ b/src/compile.lsp.in
@@ -104,9 +104,9 @@
 	(concatenate 'string
 "sh -c 'rm -rf tmp; mkdir tmp;"
 "cp @LIBPREFIX@eclmin.@LIBEXT@ @LIBPREFIX@ecl.@LIBEXT@;"
-"cd tmp; ar -x ../@LIBPREFIX@lsp.@LIBEXT@;"
+"cd tmp; @AR@ -x ../@LIBPREFIX@lsp.@LIBEXT@;"
 "for i in *.@OBJEXT@; do mv $i lsp_`basename $i`; done;"
-"ar -r ../@LIBPREFIX@ecl.@LIBEXT@ *.@OBJEXT@ ../c/all_symbols2.@OBJEXT@; rm *.@OBJEXT@;"
+"@AR@ -r ../@LIBPREFIX@ecl.@LIBEXT@ *.@OBJEXT@ ../c/all_symbols2.@OBJEXT@; rm *.@OBJEXT@;"
 "@RANLIB@ ../@LIBPREFIX@ecl.@LIBEXT@'"))
 
 #+:wants-dlopen
@@ -232,14 +232,16 @@
 	      :prefix "EXT"
               :builtin
 	      #+(or (NOT :WANTS-DLOPEN) :BUILTIN-SOCKETS) t
-	      #-(or (NOT :WANTS-DLOPEN) :BUILTIN-SOCKETS) nil)
+	      #-(or (NOT :WANTS-DLOPEN) :BUILTIN-SOCKETS) nil
+              :dont-build-fake-module t)
 
 #+WANTS-SOCKETS
 (build-module "sb-bsd-sockets"
 	      '("ext:sockets;sb-bsd-sockets.lisp")
 	      :dir "build:ext;"
 	      :prefix "EXT"
-	      :builtin nil)
+	      :builtin nil
+              :dont-build-fake-module t)
 
 #+WANTS-SERVE-EVENT
 (build-module "serve-event"
@@ -248,7 +250,8 @@
 	      :prefix "EXT"
               :builtin
 	      #+(or (NOT :WANTS-DLOPEN) :BUILTIN-SERVE-EVENT) t
-	      #-(or (NOT :WANTS-DLOPEN) :BUILTIN-SERVE-EVENT) nil)
+	      #-(or (NOT :WANTS-DLOPEN) :BUILTIN-SERVE-EVENT) nil
+              :dont-build-fake-module t)
 
 ;;;
 ;;; * Test suite
diff --git a/src/configure b/src/configure
index e92a5c6..7a6dba9 100755
--- a/src/configure
+++ b/src/configure
@@ -4537,8 +4537,7 @@ else
   true_builddir=`pwd`
 fi
 
-
-if test "x${cross_compiling}" = "xyes"; then
+if test "x${cross_compiling}" = "xyes" || test "x${force_cross_compiling}" = "xyes"; then
   if test -n "${with_cross_config}" -a -f "${with_cross_config}"; then
     . ${with_cross_config}
   elif test -f ./cross_config; then
@@ -15262,6 +15261,15 @@ else
   CLX_INFO=""
 fi
 
+if test "${with_tcp}" = "builtin"; then
+
+
+LSP_FEATURES="(cons :builtin-sockets ${LSP_FEATURES})"
+
+
+  with_tcp=yes
+fi
+
 if test "${with_tcp}" = "yes"; then
 
 cat >>confdefs.h <<\_ACEOF
diff --git a/src/configure.in b/src/configure.in
index a3033f1..e9acfe6 100644
--- a/src/configure.in
+++ b/src/configure.in
@@ -594,9 +594,16 @@ AC_CHECK_HEADERS( [fcntl.h limits.h netdb.h netinet/in.h] \
 dnl !!! end autoscan
 
 AC_CHECK_HEADERS( [sys/resource.h sys/utsname.h float.h pwd.h dlfcn.h link.h] \
-                  [mach-o/dyld.h ulimit.h dirent.h sys/ioctl.h sys/select.h] \
+                  [mach-o/dyld.h dirent.h sys/ioctl.h sys/select.h] \
                   [sys/wait.h semaphore.h] )
 
+
+AC_CHECK_HEADERS([ulimit.h], [], [],
+[[#ifdef HAVE_ULIMIT_H
+# include <ulimit.h>
+#endif
+]])
+
 dnl =====================================================================
 dnl Checks for typedefs, structures, and compiler characteristics.
 
@@ -759,6 +766,10 @@ else
   CLX_INFO=""
 fi
 
+if test "${with_tcp}" = "builtin"; then
+  ECL_ADD_BUILTIN_MODULE([sockets])
+  with_tcp=yes
+fi
 if test "${with_tcp}" = "yes"; then
   AC_DEFINE(TCP, [1], [Network streams])
   EXTRA_OBJS="${EXTRA_OBJS} tcp.${OBJEXT}"
diff --git a/src/gmp/configure b/src/gmp/configure
index 815c87d..e88d136 100755
--- a/src/gmp/configure
+++ b/src/gmp/configure
@@ -10280,7 +10280,7 @@ ia64-*-hpux*)
   ;;
 *-*-irix6*)
   # Find out which ABI we are using.
-  echo '#line 10282 "configure"' > conftest.$ac_ext
+  echo '#line 10284 "configure"' > conftest.$ac_ext
   if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
   (eval $ac_compile) 2>&5
   ac_status=$?
@@ -11725,11 +11725,11 @@ else
    -e 's:.*FLAGS}? :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:11727: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:11729: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:11731: \$? = $ac_status" >&5
+   echo "$as_me:11733: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
@@ -11958,11 +11958,11 @@ else
    -e 's:.*FLAGS}? :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:11960: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:11962: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:11964: \$? = $ac_status" >&5
+   echo "$as_me:11966: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
@@ -12018,11 +12018,11 @@ else
    -e 's:.*FLAGS}? :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:12020: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:12022: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:12024: \$? = $ac_status" >&5
+   echo "$as_me:12026: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
@@ -14202,7 +14202,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 14204 "configure"
+#line 14206 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -14300,7 +14300,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 14302 "configure"
+#line 14304 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -16479,11 +16479,11 @@ else
    -e 's:.*FLAGS}? :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:16481: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:16483: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:16485: \$? = $ac_status" >&5
+   echo "$as_me:16487: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
@@ -16539,11 +16539,11 @@ else
    -e 's:.*FLAGS}? :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:16541: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:16543: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:16545: \$? = $ac_status" >&5
+   echo "$as_me:16547: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
@@ -17900,7 +17900,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 17902 "configure"
+#line 17904 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -17998,7 +17998,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 18000 "configure"
+#line 18002 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -18825,11 +18825,11 @@ else
    -e 's:.*FLAGS}? :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:18827: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:18829: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:18831: \$? = $ac_status" >&5
+   echo "$as_me:18833: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
@@ -18885,11 +18885,11 @@ else
    -e 's:.*FLAGS}? :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:18887: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:18889: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:18891: \$? = $ac_status" >&5
+   echo "$as_me:18893: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
@@ -20919,11 +20919,11 @@ else
    -e 's:.*FLAGS}? :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:20921: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:20923: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:20925: \$? = $ac_status" >&5
+   echo "$as_me:20927: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
@@ -21152,11 +21152,11 @@ else
    -e 's:.*FLAGS}? :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:21154: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:21156: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:21158: \$? = $ac_status" >&5
+   echo "$as_me:21160: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
@@ -21212,11 +21212,11 @@ else
    -e 's:.*FLAGS}? :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:21214: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:21216: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:21218: \$? = $ac_status" >&5
+   echo "$as_me:21220: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
@@ -23396,7 +23396,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 23398 "configure"
+#line 23400 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -23494,7 +23494,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 23496 "configure"
+#line 23498 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -24810,9 +24810,7 @@ fi
 
 
 
-
-
-for ac_header in fcntl.h float.h invent.h langinfo.h locale.h nl_types.h sys/attributes.h sys/iograph.h sys/mman.h sys/param.h sys/processor.h sys/pstat.h sys/sysinfo.h sys/syssgi.h sys/systemcfg.h sys/time.h sys/times.h
+for ac_header in fcntl.h float.h invent.h locale.h sys/attributes.h sys/iograph.h sys/mman.h sys/param.h sys/processor.h sys/pstat.h sys/sysinfo.h sys/syssgi.h sys/systemcfg.h sys/time.h sys/times.h
 do
 as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
 if eval "test \"\${$as_ac_Header+set}\" = set"; then
@@ -24962,6 +24960,137 @@ fi
 done
 
 
+
+for ac_header in langinfo.h
+do
+as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
+echo "$as_me:$LINENO: checking for $ac_header" >&5
+echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6
+if eval "test \"\${$as_ac_Header+set}\" = set"; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#ifdef HAVE_LANGINFO_H
+# include <langinfo.h>
+#endif
+
+
+#include <$ac_header>
+_ACEOF
+rm -f conftest.$ac_objext
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; } &&
+	 { ac_try='test -s conftest.$ac_objext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  eval "$as_ac_Header=yes"
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+eval "$as_ac_Header=no"
+fi
+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`" >&5
+echo "${ECHO_T}`eval echo '${'$as_ac_Header'}'`" >&6
+if test `eval echo '${'$as_ac_Header'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+
+done
+
+
+
+for ac_header in nl_types.h
+do
+as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
+echo "$as_me:$LINENO: checking for $ac_header" >&5
+echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6
+if eval "test \"\${$as_ac_Header+set}\" = set"; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#ifdef HAVE_NL_TYPES_H
+# include <nl_types.h>
+#endif
+
+
+#include <$ac_header>
+_ACEOF
+rm -f conftest.$ac_objext
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; } &&
+	 { ac_try='test -s conftest.$ac_objext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  eval "$as_ac_Header=yes"
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+eval "$as_ac_Header=no"
+fi
+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`" >&5
+echo "${ECHO_T}`eval echo '${'$as_ac_Header'}'`" >&6
+if test `eval echo '${'$as_ac_Header'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+
+done
+
+
+
 # On SunOS, sys/resource.h needs sys/time.h (for struct timeval)
 
 for ac_header in sys/resource.h
diff --git a/src/gmp/configure.in b/src/gmp/configure.in
index 2d46d6d..6b20a9a 100644
--- a/src/gmp/configure.in
+++ b/src/gmp/configure.in
@@ -2189,7 +2189,20 @@ AC_HEADER_TIME
 # inttypes.h, stdint.h, unistd.h and sys/types.h are already in the autoconf
 # default tests
 #
-AC_CHECK_HEADERS(fcntl.h float.h invent.h langinfo.h locale.h nl_types.h sys/attributes.h sys/iograph.h sys/mman.h sys/param.h sys/processor.h sys/pstat.h sys/sysinfo.h sys/syssgi.h sys/systemcfg.h sys/time.h sys/times.h)
+AC_CHECK_HEADERS(fcntl.h float.h invent.h locale.h sys/attributes.h sys/iograph.h sys/mman.h sys/param.h sys/processor.h sys/pstat.h sys/sysinfo.h sys/syssgi.h sys/systemcfg.h sys/time.h sys/times.h)
+
+AC_CHECK_HEADERS([langinfo.h], [], [],
+[[#ifdef HAVE_LANGINFO_H
+# include <langinfo.h>
+#endif
+]])
+
+AC_CHECK_HEADERS([nl_types.h], [], [],
+[[#ifdef HAVE_NL_TYPES_H
+# include <nl_types.h>
+#endif
+]])
+
 
 # On SunOS, sys/resource.h needs sys/time.h (for struct timeval)
 AC_CHECK_HEADERS(sys/resource.h,,,
